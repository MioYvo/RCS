version: "3.3"
services:
  proxy:
    image: traefik
#    networks:
#      - traefik-public
#      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      [
        # api
        "--api",
        "--api.dashboard=true",
        "--api.insecure=true",
        # log
        "--log",
        "--log.level=info",
        "--accesslog=true",
        # docker
        "--providers.docker",
        "--providers.docker.exposedbydefault=false",
        # entryPoints
        "--entryPoints.http.address=:${TRAEFIK_HTTP_PORT}",
      ]
    ports:
    - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
    - "${TRAEFIK_DASHBOARD_OUTER_PORT}:8080"   # for traefik dashboard
    logging:
      options:
        max-size: "10m"
        max-file: "1"

  mongo:
    image: mongo:latest
    restart: always
#    labels:
#      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - "$DATA_PATH/mongo:/data/db"
    command: --wiredTigerCacheSizeGB 1.5
    hostname: yvo
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'RCSAccess'
      MONGO_INITDB_ROOT_PASSWORD_FILE: '/run/secrets/mongo_pass'
    ports:
      - "27077:27017"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    secrets:
      - mongo_pass

  redis:
    image: redis:alpine
    restart: always
    #    labels:
    #      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - "$DATA_PATH/redis:/data"  # RDB file
    ports:
      - "6679:6379"
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  rabbit:
    build:
      context: ../deploy/rabbitmq
      dockerfile: rabbitmq.dockerfile
    restart: always
#    labels:
#      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - "$DATA_PATH/rabbitmq:/var/lib/rabbitmq"
#      - /etc/RCS/rabbitmq.conf:/etc/rabbitmq.conf
    hostname: yvo
    environment:
      RABBITMQ_USER: 'RCSAccess'
      RABBITMQ_PASS_FILE: '/run/secrets/rabbit_pass'
    ports:
      - "5672:5672"
      - "25671:15671"
      - "25672:15672"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    secrets:
      - rabbit_pass

  ac:
    scale: ${AC_SCALE}
    build:
      context: ../Access
      dockerfile: ../Access/Dockerfile
    depends_on:
      - mongo
      - redis
      - rabbit
    environment:
      PYTHONUNBUFFERED: 1
      PIKA_HOST: rabbit
      PIKA_PASS_FILE: /run/secrets/rabbit_pass
      MONGO_HOST: mongo
      MONGO_PASS_FILE: /run/secrets/mongo_pass
      REDIS_HOST: redis
      PROJECT_NAME: AC
      ENABLE_DOC: 1
#      DOC_URL: localhost
      WEB_CONCURRENCY: 1  # process num
      CREATE_INDEX: 1
      RUN_HOST: ${TRAEFIK_HOST}
    labels:
      - traefik.enable=true
      - traefik.http.routers.rcs-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`) || PathPrefix(`/openapi.json`)
#      - traefik.http.services.rcs-backend.loadbalancer.server.port=${AC_INNER_PORT}
    expose:
      - ${AC_PORT}
    secrets:
      - rabbit_pass
      - mongo_pass
    logging:
      options:
        max-size: "10m"
        max-file: "1"

  dp:
    scale: ${DP_SCALE}
    build:
      context: ../DataProcessor
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - redis
      - rabbit
    environment:
      PYTHONUNBUFFERED: 1
      PIKA_HOST: rabbit
      PIKA_PASS_FILE: /run/secrets/rabbit_pass
      MONGO_HOST: mongo
      MONGO_PASS_FILE: /run/secrets/mongo_pass
      REDIS_HOST: redis
      PROJECT_NAME: DP
      WEB_CONCURRENCY: 1 # process num
    secrets:
      - rabbit_pass
      - mongo_pass
    logging:
      options:
        max-size: "10m"
        max-file: "1"

  reg:
    scale: ${REG_SCALE}
    build:
      context: ../RuleEngine
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - redis
      - rabbit
    environment:
      PYTHONUNBUFFERED: 1
      PIKA_HOST: rabbit
      PIKA_PASS_FILE: /run/secrets/rabbit_pass
      MONGO_HOST: mongo
      MONGO_PASS_FILE: /run/secrets/mongo_pass
      REDIS_HOST: redis
      PROJECT_NAME: REG
      WEB_CONCURRENCY: 1  # process num
    secrets:
      - rabbit_pass
      - mongo_pass
    logging:
      options:
        max-size: "10m"
        max-file: "1"

#  frontend:
#    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
#    build:
#      context: ./frontend
#      args:
#        FRONTEND_ENV: ${FRONTEND_ENV-production}
#    deploy:
#      labels:
#        - traefik.enable=true
#        - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
#        - traefik.http.routers.rcs-frontend-http.rule=PathPrefix(`/`)
#        - traefik.http.services.rcs-frontend.loadbalancer.server.port=80


#networks:
    # use for other project used exists traefik, one traefik contains all backend
#  traefik-public:
    # Allow setting it to false for testing
#    external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-true}
#  default:
#    external: true

secrets:
  rabbit_pass:
    file: "$SECRETS_PATH/rabbit_pass"
  mongo_pass:
    file: "$SECRETS_PATH/mongo_pass"
